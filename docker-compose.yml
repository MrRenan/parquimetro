#	version: '3.8'
#
#	services:
#	  mongo:
#		image: mongo:5.0
#		container_name: mongo
#		ports:
#		  - "27017:27017"
#		volumes:
#		  - mongo-data:/data/db
#
#	  app:
#		build: .
#		container_name: spring_app
#		ports:
#		  - "8080:8080"
#		depends_on:
#		  - mongo
#		environment:
#		  - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/parking
#		  - AWS_REGION=x
#		  - AWS_SQS_QUEUEURL=x
#		  - AWS_LOCAL_ENDPOINT=x
#		  - PARQUIMETRO_EMAIL_NOREPLY=x
#
#	volumes:
#	  mongo-data:

version: '3.1'
services:

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: parquimetro
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - intranet

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    networks:
      - intranet

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
      - AWS_DEFAULT_REGION=us-east-1
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  intranet:
    driver: bridge
